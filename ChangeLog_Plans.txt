[CHANGELOG 0.2]
-


Well, there is one problem I've been trying to ignore from the start, since I did not want to use any other language to write this for a number of simple reasons (I know python, and I wanted to practice it, and I need it now and then for my work with computer graphics and visual effects).

The problem is - how to sell it to people? I'm not talking about money. I mean that if we want to create a community at least the same size it was when RF was more or less popular, then we need people to download and use it. And since first RF version I knew that people don't like to download programs on their PCs, some are scared of viruses, some just prefer to not have unwanted apps on their PCs. And there is always a compatibility issue. We can make pyqt builds for win, mac, linux, even android if needed. But thats a lot o works, compared to just openning up any browser and running an app from there. Thats why I made web version, flash. And then that other guy (Or girl :D) made JS version.

So, ideally, it would be nice to somehow move it all 'in the cloud' :D But I don't know if it is even possible to create pyqt web app, researching this field now... If it is even a good idea to write a web app on python? Also... writing and reading files, what, use cookies for that? nah...

Any thoughts?

[DONE]
- JSON read write
- Save all characters to JSON
- Edit character stats
- Actions list
- INI file to set user defined databases
- Modular action system (health = formula(1d5+strength+10/endurancechar2)*-1 or NODES) USE EVAL!!!!! print eval("2+2")
- Items list
- Items list edit
- Inventory stats use. Create function which will add stats to char, and substract when needed.
- Ability to just roll a dice and output it's value, based on characters' luck\stats, without executing any actions. The dice formula should be configurable like an action
- Inventory items' durability use
- add weaponDamage to action and CritMultiplier
- Missing way to much
- Saving different cfg files
- Faster growing arousal
- Total points calculation
- Add ability to save games by saving new cfg file with new paths to new data files.. somehow
*Okay, Idea... Get current cfg json into dict, add changes, save all new files.

[TODO]
- Stats cap

- Stamina restoring during actions?

- GRAPHS!!! TUNING CHARACTERS!!!!

- Multi-game system

- increase stamina drain

- arousal gameplay. High arousal inflences what?

- add used action name to output

- waking up from KOs, how should it work?

- Stamina check?

- Grappling\Positions?

- Add at least 1-level undo

- Add options to choose dices and sides for lucky roll
- A fast way to swap sender/receiver. Right now, I have to click on one selection box, pick one, then another...
- LICENSE file. It may see unnecessary now, but you can forget to add it when pushing out to github, and then there will be another project with public source, but without a copy-left license. So nobody can do anything with it, the default setting for copyright/intellectual property forbids everything what is not allowed. What specific license is another question, but unless you know something about this area, I would just stick there "GNU GPL v2 or newer", so anyone can work with the source, but has to keep your attribution and the license. (Pulling SW licenses on F-list... an example of professional deformation, I guess. :D)
- I have now realised one thing which I will maybe add also to my fork before your work is done. Even though maybe you get it working before I get to it: alternate colour scheme for white background. For example when sending over email, yellow is really not readable, and highlighting lines with dark background looks ugly... :-)
- Looking on the test graph for luck rolls - you just roll some 20 numbers and plot them... This is not a good way, the sample is way bellow statistical usability and you can get results that looks different than what the true statistical property in long time is. Better way is how I did it in the python file: roll many times, the more, the better, but at least few hundreds times, and make histogram. That is, don't plot roll values, but "how many rolls had this value". That will tell you much more about distribution of specific values, than just 20 random rolls.

- Graphs should show comparison of two characters, and the relation between the higher roll and it's influence on health\stamina, at least in attacks
- Store game history to see the graph if needed
- Settings window to let user edit INI file from UI

- Fix bug. Creating new item - can't edit properties.
